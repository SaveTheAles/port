version: '3'

services:
    postgres:
        image: postgres:latest
        restart: always
        container_name: port_postgres
        volumes:
            - ./pdb:/var/lib/postgresql/data
            - ./schema:/root/schema
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        networks:
            port-net:
                ipv4_address: 172.28.1.2
        ports:
            - ${POSTGRES_HOST}:${POSTGRES_PORT}:5432
    graphql-engine:
        image: hasura/graphql-engine:latest
        restart: always
        container_name: port_hasura
        depends_on:
            - "postgres"
        environment:
            HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@172.28.1.2:${POSTGRES_PORT}/${POSTGRES_DB}
            HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
            HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
            HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
        networks:
            port-net:
                ipv4_address: 172.28.1.3
        ports:
            - ${HASURA_HOST}:${HASURA_PORT}:8080
    port:
        build: ./port_processor
        restart: always
        container_name: port
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_HOST: 172.28.1.2
            POSTGRES_PORT: ${POSTGRES_PORT}
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
            HASURA_HOST: 172.28.1.3
            HASURA_PORT: 8080
            START_BLOCK: ${START_BLOCK}
            ETH_NODE_WSS: ${ETH_NODE_WSS}
            ETH_NODE_RPC: ${ETH_NODE_RPC}
            RECEIVER: ${RECEIVER}
            LCD_API: ${LCD_API}
            gRPC_API: ${gRPC_API}
            SENDER: ${SENDER}
        networks:
            port-net:
                ipv4_address: 172.28.1.4
    cap_api:
        build: ./cap_api
        restart: always
        container_name: cap_api
        environment:
            ETH_NODE_RPC: ${ETH_NODE_RPC}
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
            HASURA_HOST: 172.28.1.3
            HASURA_PORT: 8080
        ports:
            - ${CAP_API_HOST}:${CAP_API_PORT}:5000
        networks:
            port-net:
                ipv4_address: 172.28.1.5
networks:
  port-net:
    driver: bridge
    ipam:
        driver: default
        config:
            - subnet: 172.28.1.0/24